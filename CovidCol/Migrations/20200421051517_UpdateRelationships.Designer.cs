// <auto-generated />
using CovidCol.DBContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CovidCol.Migrations
{
    [DbContext(typeof(CovidColContext))]
    [Migration("20200421051517_UpdateRelationships")]
    partial class UpdateRelationships
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CovidCol.Models.Ciudad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartamentoId");

                    b.Property<string>("NombreCiudad");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("Ciudades");

                    b.HasData(
                        new { Id = 1, DepartamentoId = 1, NombreCiudad = "Bogotá" },
                        new { Id = 2, DepartamentoId = 2, NombreCiudad = "Tunja" },
                        new { Id = 3, DepartamentoId = 3, NombreCiudad = "Barranquilla" },
                        new { Id = 4, DepartamentoId = 4, NombreCiudad = "Medellín" }
                    );
                });

            modelBuilder.Entity("CovidCol.Models.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.ToTable("Departamentos");

                    b.HasData(
                        new { Id = 1, Nombre = "Cundinamarca" },
                        new { Id = 2, Nombre = "Boyacá" },
                        new { Id = 3, Nombre = "Atlantico" },
                        new { Id = 4, Nombre = "Antioquia" }
                    );
                });

            modelBuilder.Entity("CovidCol.Models.TipoDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abreviacion");

                    b.Property<string>("Descripcion");

                    b.HasKey("Id");

                    b.ToTable("TiposDocumento");

                    b.HasData(
                        new { Id = 1, Abreviacion = "CC", Descripcion = "Cédula de ciudadanía" },
                        new { Id = 2, Abreviacion = "CE", Descripcion = "Cédula de extranjería" },
                        new { Id = 3, Abreviacion = "TI", Descripcion = "Tarjeta de Identidad" },
                        new { Id = 4, Abreviacion = "RC", Descripcion = "Registro Civil" }
                    );
                });

            modelBuilder.Entity("CovidCol.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos");

                    b.Property<int>("CiudadId");

                    b.Property<string>("Direccion");

                    b.Property<bool>("EnEstudio");

                    b.Property<string>("Nombre");

                    b.Property<long>("NumeroDocumento");

                    b.Property<string>("Telefono");

                    b.Property<int>("TipoDocumentoId");

                    b.HasKey("Id");

                    b.HasIndex("CiudadId");

                    b.HasIndex("TipoDocumentoId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("CovidCol.Models.Ciudad", b =>
                {
                    b.HasOne("CovidCol.Models.Departamento", "Departamento")
                        .WithMany()
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CovidCol.Models.Usuario", b =>
                {
                    b.HasOne("CovidCol.Models.Ciudad", "Ciudad")
                        .WithMany()
                        .HasForeignKey("CiudadId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CovidCol.Models.TipoDocumento", "TipoDocumento")
                        .WithMany()
                        .HasForeignKey("TipoDocumentoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
